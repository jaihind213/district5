# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: pytests_pypi

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


permissions:
  contents: read
  pull-requests: write

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.x
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade poetry
        poetry install
        poetry export --without-hashes --with dev --format=requirements.txt > requirements.txt 
        pip install -r requirements.txt
    - name: Lint code
      run: |
        echo "this is taken care as a pytest"
    - name: Test with pytest
      run: |
        docker pull jaihind213/radio-duck:latest
        docker run --name radio_duck -d -p 8000:8000 -t jaihind213/radio-duck:latest
        sleep 10
        pytest
        docker rm -f radio_duck
    - name: pypi publish
      if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
      run: |
        export POETRY_PYPI_TOKEN_PYPI=${{ secrets.PIEPIE }}
        git fetch origin
        latest_commit=$(git rev-parse origin/main)
        echo "latest commit is $latest_commit"
        #URL="https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files"
        URL="https://api.github.com/repos/${{ github.repository }}/commits/$latest_commit"
        curl -s -X GET -G $URL &> out
        cat out
        FILES=$(curl -s -X GET -G $URL | jq -r '.[] | .filename')
        # Check if the latest commit contains a .py file
        if [ $? -eq 0 ]; then
            echo "The latest commit contains a .py file."
            echo "poetry publish will fail if u have not bumped the lib version"
            #poetry publish --build
          else
            echo "no py file changed!!"
            #poetry publish --build --skip-existing
        fi
