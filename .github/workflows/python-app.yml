# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: pytests_pypi

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  SUPERSET_VER: 3.0.1
  SUPERSET_IMAGE_NAME: jaihind213/superset-radioduck

permissions:
  contents: read
  pull-requests: write

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.x
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade poetry
        poetry install
        poetry export --without-hashes --with dev --format=requirements.txt > requirements.txt 
        pip install -r requirements.txt
    - name: Lint code check
      run: |
        if  isort . |grep Fixing;then 
            echo "please run 'isort .' and commit"; 
            unknown_command_to_fail_build;
        fi
        if  black . --preview |grep reformatted;then 
            echo "please run 'black . --preview' and commit"; 
            unknown_command_to_fail_build;
        fi
        echo "if flake8 detects something, please run 'flake8 --format=pylint .' and commit"
        flake8 --format=pylint .
    - name: Test with pytest
      run: |
        docker pull jaihind213/radio-duck:latest
        docker run --name radio_duck -d -p 8000:8000 -t jaihind213/radio-duck:latest
        sleep 10
        pytest
        docker rm -f radio_duck
    - name: pypi publish
      if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
      run: |
        export POETRY_PYPI_TOKEN_PYPI=${{ secrets.PIEPIE }}
        git fetch origin
        latest_commit=$(git rev-parse origin/main)
        echo "latest commit is $latest_commit"
        #URL="https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files"
        URL="https://api.github.com/repos/${{ github.repository }}/commits/$latest_commit"
        curl -s -X GET -G $URL &> out
        #cat out
        FILES=`cat out | jq -r '.files[].filename'`
        echo $FILES || echo "files in commit"
        # Check if the latest commit contains a .py file
        #echo $FILES | grep -i "\\.py"
        if echo $FILES | grep -i "\\.py" |grep -vi "_test.py" | grep -vi superset; then
            echo "The latest commit contains a .py file."
            echo "poetry publish will fail if u have not bumped the lib version"
            poetry publish --build
          else
            echo "no py file changed!!"
            poetry publish --build --skip-existing
        fi
        sleep 25
    - name: Set up QEMU for cross-building
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Docker build image for Apache Superset with district5 lib to connect to radio-duck
      run: |
        DOCKER_VERSION=`cat pyproject.toml |grep version |grep -v python|grep -v target | awk '{print $3}' |sed -e "s/\"//g"`
        echo "DOCKER_VERSION=$DOCKER_VERSION" >> $GITHUB_ENV
        #
        SUPERSET_IMAGE_TAG=${SUPERSET_IMAGE_NAME}:${DOCKER_VERSION}
        echo "SUPERSET_IMAGE_TAG=$SUPERSET_IMAGE_TAG"
        echo "SUPERSET_IMAGE_TAG=$SUPERSET_IMAGE_TAG" >> $GITHUB_ENV
        #
        curl -LJO https://github.com/apache/superset/archive/${SUPERSET_VER}.zip
        unzip -qq superset-${SUPERSET_VER}.zip
        mv superset-${SUPERSET_VER} superset_dir
        
        DISTRICT5_VER="DISTRICT5=district5=="
        DISTRICT5_VER=${DISTRICT5_VER}${DOCKER_VERSION}
        BASE_IMAGE="BASE_IMAGE=apache/superset:${SUPERSET_VER}-py310"
        echo "DISTRICT5_VER = $DISTRICT5_VER"
        echo "BASE_IMAGE = $BASE_IMAGE"
        #
        docker buildx build --build-arg=$BASE_IMAGE --build-arg=$DISTRICT5_VER -f Dockerfile_superset_integration --platform=linux/x86_64,linux/amd64 -t $SUPERSET_IMAGE_TAG -t $SUPERSET_IMAGE_NAME:latest .
        docker buildx build --build-arg=$BASE_IMAGE --build-arg=$DISTRICT5_VER -f Dockerfile_superset_integration --output type=docker -t $SUPERSET_IMAGE_TAG -t $SUPERSET_IMAGE_NAME:latest .
        #why we issue build twice ?-> bug-> https://github.com/docker/buildx/issues/59, one is build and one is to load to local registry
        # todo: linux/arm64 docker build takes a long time
    - name: Docker Scout superset
      id: docker-scout-superset
      if: ${{ github.event_name == 'pull_request' }}
      uses: docker/scout-action@v1
      with:
        command: quickview,cves,recommendations
        image: local://jaihind213/superset-radioduck
        ignore-unchanged: true
        only-severities: critical,high
        dockerhub-password: ${{ secrets.DHUB }}
        dockerhub-user: ${{ secrets.DHUB_USER }}
        exit-code: true
        only-fixed: true
        ignore-base: true
        summary: true
      env:
        GITHUB_TOKEN: ${{ secrets.GTOKEN }}
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DHUB_USER }}
        password: ${{ secrets.DHUB }}
    - name: Build and push Docker image of Apache Superset
      if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile_superset_integration
        platforms: linux/x86_64,linux/amd64 # todo: linux/arm64 takes a long time
        push: true
        tags: ${{ env.SUPERSET_IMAGE_NAME }}:latest,${{ env.SUPERSET_IMAGE_TAG }}