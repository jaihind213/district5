# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: pytests_pypi

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


permissions:
  contents: read
  pull-requests: write

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.x
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade poetry
        poetry install
        poetry export --without-hashes --with dev --format=requirements.txt > requirements.txt 
        pip install -r requirements.txt
    - name: Lint code
      run: |
        echo "this is taken care as a pytest"
    - name: Test with pytest
      run: |
        docker pull jaihind213/radio-duck:latest
        docker run --name radio_duck -d -p 8000:8000 -t jaihind213/radio-duck:latest
        sleep 10
        pytest
        docker rm -f radio_duck
    - name: pypi publish
      #if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
      run: |
        export POETRY_PYPI_TOKEN_PYPI=${{ secrets.PIEPIE }}
        echo "Branch being built is ${{ github.ref }}"
        SOURCE_BRANCH=$(echo "${GITHUB_REF#refs/heads/}")
        BASE_BRANCH=$(echo "${GITHUB_BASE_REF#refs/heads/}")
        echo "Source branch of pull request: $SOURCE_BRANCH"
        echo "base branch of pull request: $BASE_BRANCH"
        latest_commit=`git log -1 --pretty ${{ github.ref }}|head  -n 1|grep commit | awk '{print $2}'`
        echo "latest commit: $latest_commit"
        # Check if the latest commit contains a .py file
        git show --name-only $latest_commit | grep -i ".py"
        if [ $? -eq 0 ]; then
            echo "The latest commit contains a .py file."
            echo "poetry publish will fail if u have not bumped the lib version"
            poetry publish --build --build
        else
            echo "The latest commit does not contain a .py file."
            poetry publish --build --skip-existing
        fi
